##################################################################################
#
#      ppi-server config file of measure routines
#      writen by Alexander Kolli <ppi-server@magnificat.at>
#
#
#  this config file basic.conf have same structure of folder and subroutines
#  like measure.conf. By the first installation you can see the values
#  over the java-client in the file components.desktop from the same directory
#  wich is copied into the client folder
#
#
#   TYPES:          properties and actions:
#	GETCONTACT	properties: <in>, [out]
#			actions: db
#	    [measure if pin gets an contact from the COM or LPT interface  ]
#
#	SWITCHCONTACT	properties: <out>, <begin|while|end>
#			actions: db
#	    [set the pin under power while the case of begin, while or end occures ]
#
#   PROPERTIES:
#	in		- pin from COM or LPT port witch getting contacts from device
#			  for type GETCONTACT
#			  value is an split item <device>:<pin>
#			  the device can be COM or LPT with an number from 1 to how many
#			  devices exist on your computer defined in server.conf
#			  pins are CTS, DSR, RI and DCD for an COM port
#	out		- pin from COM port witch can be set
#			  for types GETCONTACT and SWITCHCONTACT
#			  value is an split item <device>:<pin>
#			  the device can be COM or LPT with an number from 1 to how many
#			  devices exist on your computer defined in server.conf
#			  pins are DTR, RTS and TXD for an COM port
#	begin		- do reading or writing if begin status occurring
#			  for type SWITCHCONTACT
#			  the value can be an defined-value
#	while		- do reading or writing while state be set
#			  for type SWITCHCONTACT
#			  the value can be an defined-value
#	end		- end read or write if state occurring
#                         for type SWITCHCONTACT
#			  the value can be an defined-value
#   ACTIONS:
#	db		- writing actual state on database
#
#
###################################################################################

folder= outline[1]
#~~~~~~~~~~~~~~~~~~~~
name= ON1
type= SWITCHCONTACT
out= COM1:RTS
while= remote | holder

name= holder
type= SWITCH
perm= change

name= value
type= VALUE
perm= change
min= 0
max= 255
action= db

sleep= 0.01



