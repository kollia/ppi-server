

This package uses the cmake methods

QUICK INSTALL:
 
1. install PACKAGES
    bash
    cmake
    gcc
    g++
    libtool
    boost 
   (If they are to other hardware access them,
    read also point 1 and 3 from Full Installation below)

2. DOWNLOAD
  Download and unpack ppi-server[version]
  (you can find it on google: http://code.google.com )
     
3. CONFIGURATION
  cd ppi-server[version]/build
  cmake ..
  # as root
  make install
  
6. start SERVER
  # as root
  /usr/local/bin/ppi-server start
  
7. DEVELOPMENT
  read bellow under full installation



More complete instructions:
---------------------------------------------------------------------
Full Installation
==================

1. install PACKAGES
  the basic installation of ppi-server is currently
  only available for the COM-interface.
  If they are to other hardware access them,
  install also the packages from INSTALL_OWFS for maxim/dallas semiconductors
  or INSTALL_K8055 for the Vellemann experimantel K8055 board
  
  for this basic installation the packages needed:
	      bash
	      cmake
	      gcc
	      g++
	      libtool
	      boost 
	      

1. DOWNLOAD
  Download ppi-server from http://code.google.com
  unpack with tar -zxvf ppi-server[version].tar.gz
  you can also downlad ppi-java-client for better access to server
  read there the installation file
  
  
3. CONFIGURATION
  go into the build directory of ppi-server
  cd ppi-server[version]/build
  
  for the first configuration
  type cmake ..
  If you want also install the packages owfs or K8055
  or changing the install directories or running user under
  type ccmake ..
      
  - you need also the packages owfs or k8055
      set the corresponding flags to ON
	  USE_OWFS
	  USE_K8055

  - you want to change the install directories
      CMAKE_INSTALL_PREFIX 	- is the path for the binary, additional /bin
      INSTALL_CLIENT_PATH 	- path for the *.desktop files, additional /ppi-server/client
				  this place is for ppi-java-client or any other client
				  read there after installation, or in this ziped package
				  under directory client the layout_description.txt
      INSTALL_CONFIG_PATH 	- directory for all configuration files, additional /ppi-config
      INSTALL_DATABASE_PATH	- path for the server to save database entrys, additional /ppi-server/database
      INSTALL_LOGGING_PATH	- path where archive logging information, additional /ppi-server
  
  - the server should run under an other user than nobody
      set INSTALL_DEFAULTUSER to an other name of exist user,
      also you have to set the same user in the configuration file server.conf
      under defaultuser
      
  compile as root with > make install
  if you make befor as normaly user an make,
  don't be afraid for the errors "Operation not permitted" by point [2%] Generating install.sh
  it will be generate again by installing
   
   
6. start SERVER
  type as root
  /usr/local/bin/ppi-server start
  you can also write an link into the runnlevel
  to start the server by booting
  
  
7. DEVELOPMENT
  for developing you can use this content as workspace.
  If you use the cmake gerator for the Makefile
  change the install path to
      INSTALL_CLIENT_PATH 	- client
      INSTALL_CONFIG_PATH 	- conf
      INSTALL_DATABASE_PATH	- data
      INSTALL_LOGGING_PATH	- log
  because, if not given root path / before  
  it will be set the path into the workspace where compiled
  
  otherwise when you have an own Makefile, the path will be set
  in src/util/debug.h the same definition, you have nothing to do.  
  In this case you have to set also for other packages
  the symbols -D in the Makefile for make
  _OWFSLIBRARY for maxim/dallas owfs and/or
  _K8055LIBRARY for Vellemann K8055
  
  and there needs the librarys
  librt.so for ppi-server
  libowcapi.so for maxim/dallas owfs and/or
  libk8055.so and libusb.so for Vellemann K8055
  
  
  
  
  
  
  
  
  