
   This file is part of ppi-server.

   ppi-server is free software: you can redistribute it and/or modify
   it under the terms of the Lesser GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   ppi-server is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   Lesser GNU General Public License for more details.

   You should have received a copy of the Lesser GNU General Public License
   along with ppi-server.  If not, see <http://www.gnu.org/licenses/>.


you find an project description on <http://code.google.com/p/ppi-server/>
currently it's maintained from Alexander Kolli <ppi@magnificat.at>
This package uses the cmake methods

QUICK INSTALL:
 
1. install PACKAGES
    bash
    make
    cmake
    gcc
    g++
    boost 
   (If they are to other hardware access them,
    read also point 1 and 3 from Full Installation below)

2. DOWNLOAD
  Download and unpack ppi-server_v[xxx].tar.gz
  (you can find it on http://code.google.com/p/ppi-server/downloads/list )
     
3. CONFIGURATION
  cd ppi-server_v[xxx]/build
  cmake ..
  # as root
  make install
  
6. start SERVER
  # as root
  /usr/local/bin/ppi-server start
  
7. DEVELOPMENT
  read bellow under full installation



More complete instructions:
---------------------------------------------------------------------
Full Installation
==================

1. install PACKAGES
  the basic installation of ppi-server is currently
  only available for the COM-interface.
  If they are to other hardware access them,
  install also the packages from INSTALL_OWFS for maxim/dallas semiconductors
  or INSTALL_K8055 for the Vellemann experimental K8055 board
  
  for this basic installation the packages needed:
	      bash
	      make
	      cmake
	      gcc
	      g++
	      boost 
	      

1. DOWNLOAD
  Download ppi-server from http://code.google.com/p/ppi-server/downloads/list
  unpack with tar -zxvf ppi-server_v[xxx].tar.gz
  you can also downlad ppi-server-java-client for better access to server
  read there the installation file
  
  
3. CONFIGURATION
  go into the build directory of ppi-server
  cd ppi-server_v[xxx]/build
  
  for the first configuration
  type cmake ..
  If you want also install the packages owfs or K8055
  or changing the install directories or running server under other user
  type ccmake ..
      
  - you need also the packages owfs or k8055
      set the corresponding flags to ON
	  USE_OWFS
	  USE_K8055
	you have to insert also the access to the decices in server.conf
	  entry VK8055 to jumper
	  or maximinit to maybe -u for all maxim usb devices

  - you want to change the install directories
      CMAKE_INSTALL_PREFIX 	- is the path for the binary, additional /bin
      INSTALL_CLIENT_PATH 	- path for the *.desktop files, additional /ppi-server/client
				  this place is for ppi-java-client or any other client
				  read there after installation, or in this ziped package
				  under directory client the layout_description.txt for better descriptios
      INSTALL_CONFIG_PATH 	- directory for all configuration files, additional /ppi-config
      INSTALL_DATABASE_PATH	- path for the server to save database entrys, additional /ppi-server/database
      INSTALL_LOGGING_PATH	- path where archive logging information, additional /ppi-server
  
  - the server should run under an other user than nobody
      set INSTALL_DEFAULTUSER to an other name of exist user,
      also you have to set the same user in the configuration file server.conf
      under defaultuser
      
  compile as root with > make install
  if you make befor as normaly user an make,
  don't be afraid for the errors "Operation not permitted" by point [2%] Generating install.sh
  it will be generate again by installing
   
   
6. start SERVER
  type as root
  ${CMAKE_INSTALL_PREFIX}/bin/ppi-server start
  all further commands if you want to use the C++ client on command line
  you can see with ${CMAKE_INSTALL_PREFIX}/bin/ppi-server -?
  you can also write an link into the runnlevel
  to start the server by booting
  
  
7. DEVELOPMENT
  for developing you can use this content as workspace.
  better you check out from the repository
  http://ppi-server.googlecode.com/svn/trunk/server/
  the latest version. See http://code.google.com/p/support/source/checkout
  If you want to join the project,
  send an email to maintainer <ppi@magnificat.at>
  showing your interest and your ability to help the project
  
  If you use the cmake generator for the Makefile
  delete the install path from
      INSTALL_CLIENT_PATH
      INSTALL_CONFIG_PATH
      INSTALL_DATABASE_PATH
      INSTALL_LOGGING_PATH in ccmake ..
  and the path variables for the binary not be set
  
  also when you have an own Makefile, the path will be set
  in src/util/debug.h the same definition, you have nothing to do.  
  In this case you have to set also for other packages
  the symbols -D in the Makefile for make if you need
  _OWFSLIBRARY for maxim/dallas owfs and/or
  _K8055LIBRARY for Vellemann K8055
  
  by both cases, the server needs permission 
  to the subdirectorys client, data and log.
  go into the cmake directory and call as root
  ./install [defaultuser]
  defaultuser is the same like from server.conf and ccmake (INSTALL_DEFAULTUSER)
  
  the binary needs also the librarys
  librt.so for ppi-server
  libowcapi.so for maxim/dallas owfs and/or
  libk8055.so for Vellemann K8055
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  