##################################################################################
#
#      ppi-server config file of measure routines
#      writen by Alexander Kolli <ppi-server@magnificat.at>
#
#
#  this config file maxim.conf have same structure of folder and subroutines
#  like measure.conf. If you have any chips from maxim, this is an example 
#  for the thermostat semicoductor DS1820. Copy the file maxim.desktop from the same directory
#  into the ppi-client folder, to see the result in the java-client.
#  An description of all chips which are reached, reading http://www.owfs.org
#
#
#   TYPES:          properties and actions:
#	OWFS		properties: <ID>, [pin], [priority], [cache], <begin|while|end>
#			actions= <write|read>, [current(read DS2408)], [cache]
#	    [access to an chip with the unique address from maxim on property <id>	]
#
#   PROPERTIES:
#	ID		- unique address of chip maxim chip
#	pin		- reading/writing pin of chip
#			  if property not set, the default pin for this chip
#			  taken from defaultmaxim.conf
#	priority	- priority of writing
#			  all pins are holding in an queue to write in serie.
#			  if in the queue more than one chips/pins 
#			  higher prioritys will be concerned of writing before the other
#			  (allowed priority 1 (highest) to priority 9999 (lowest))
#	cache		- all chips are reading in an cache always again after this defined seconds
#			  If this PROPERTY not be set, the default cache from defaultmaxim.conf be taken
#	begin		- do writing if begin status occurring
#			  the value can be an defined-value
#	while		- do writing while state be set
#			  the value can be an defined-value
#	end		- set pin to 0 if expression be correct
#			  the value can be an defined-value
#
#    ACTIONS:
#	write	- writing on pin
#		  if not set take action from defaultmaxim.conf
#	read	- reading on pin
#		  if not set take action from defaultmaxim.conf
#	current	- only by action read for chips witch reading an contact (0|1 bit),
#		  do only read the actual state from chip.
#		  Otherwise the server check also whether the pin gets an contact
#		  between the last reading
#	cache	- only by action write in one folder by the same chip witch have more 
#		  than one pin. It will be write the current state into an queue
#		  and write all states by the next pin without action cache
#		  to writing simultaneosly
#	db	- writing actual state on database
#	
#
###################################################################################


# if you have an DS1820 semiconductor from maxim/dallas
# start first the server better with undocumented file maxim.conf in measure.conf
# (elsewhere you see only this unreached ID below defined)
# than you can see all unaccessible chips on command line.
# fill in for ID the unreached DS1820 and start the server again
#
folder= THERMOSTAT
#~~~~~~~~~~~~~~~~~~~~
name= thermo
type= OWFS
ID= 10.EC184C010800
perm= read
action= db
sleep= 5
