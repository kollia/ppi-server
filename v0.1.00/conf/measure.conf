##################################################################################################################
#
#      ppi-server config file of measure routines
#      writen by Alexander Kolli <ppi-server@magnificat.at>
#
#
#  this config file measure.conf have one or more folder which running
#  in extra threads. All folder have one or more subroutines called with attribute name
#  and should ending with an sleep time. Elswhere the polling measure thread sleeping
#  on end of the folder for standard sleep time definde in server.conf
#  example:
#        folder= <foldername>
#        name= <subroutinename>
#        type= <type as follow>
#        [some properties for subroutine]
#        name= <new subroutine>
#        ...
#        sleep= 1.5 # seconds
#
#  on any place (better on beginning or after sleep) can also be defined any external files
#  where be the same structre folder and subroutines (see for example the definition bellow).
#  Follow standard types can be set
#  and they need also the propertys which in <> brackats or optional properties in [] brackats
#  and the actions with the attribute action are optional
#  read the description under PROPERTIES and ACTIONS
#
#
#   TYPES:          properties and actions:
#	SWITCH		properties: <begin|while|end>, [default], [perm]
#			actions: db
#	    [the type SWITCH is an holder for 0 or 1
#            beginning or ending in the case of defined subroutines
#            and can also set from outside, when permission given     ]
#
#	VALUE		properties: [min & max], [default], [perm]
#			actions: float, db
#           [VALUE is an holder in the range of min and max
#            and can only set from outside when permission given.
#            If min and max not be set or with false values defined,
#            the range can have all values                            ]
#
#       COUNTER		properties: [setnull], [perm]
#			actions: <no actions>
#           [counts one higher by every passing
#            starting by 0 and ending by setnull			]
#
#	TIMER		properties: <sec|min|hour>, <begin|while>, [perm]
#			actions: <no actions>
#           [count the time in the case of begin
#            and ending if by the end of definde time 
#	     or afore when the case of while no more given            ]
#
#	SHELL		properties: <while>, <begincommand|whilecommand|endcommand>, [perm]
#			actions: db
#           [starts an shell command in the case of <while> is correct  ]
#
#
#   PROPERTIES:
#    the value of some properties can be the string 'true' or 'false'
#    or shown to an other subroutine intern of folder <subroutine-name>
#    or show to an subroutine outside the folder <folder-name>:<subroutine-name>.
#    if this value is not null the case is given same like 'true'. Elswhere by null the case not given 'false'.
#    The subroutines can also comparing (=><) with an value or an other subroutine
#    and more comparisons can be seperated with an & (and) or an | (or).
#    for better overview in the properties description we call it as defined-value
#
#	begin		- do reading or writing if begin status occurring
#			  for types SWITCH and TIMER
#			  the value can be an defined-value
#	while		- do reading or writing while state be set
#			  for types SWITCH, TIMER and SHELL
#			  the value can be an defined-value
#	end		- end read or write if state occurring
#                         for the type SWITCH
#			  the value can be an defined-value
#	default		- when the server starting the first time
#			  or by every start if the action db not set
#			  elsewhere the default not be set and no db
#			  the value to begin is 0
#			  for types SWITCH and VALUE
#			  the value can be 0 or 1 for SWITCH
#			  or the defined range for VALUE
#	perm		- the given permischen by access from outside over the server
#			  if no permischen be set, the permision is only root
#			  this property can be defined for all types
#			  the value can be a group defined in access.conf
#	min		- minimal range for value
#			  if min or max not be set, the value have the hole range
#			  for type VALUE
#			  the value can be an integer when action float not be set,
#			  elsewhere an double
#	max		- maximal range for value
#			  if min or max not be set, the value have the hole range
#			  for type VALUE
#			  the value can be an integer when action float not be set,
#			  elsewhere an double
#	setnull		- if this case is ginven, the value be set to 0
#			  elsewhere this property not be set the value set to 0
#			  when 1.7E+308 be reached
#			  for type COUNTER
#			  the value can be an defined-value
#	sec		- after seconds the end will be reached
#			  for type TIMER
#			  the value can be integer of seconds
#	min		- after seconds the end will be reached
#			  for type TIMER
#			  the value can be an integer of minutes
#	hour		- after seconds the end will be reached
#			  for type TIMER
#			  the value can be an integer of hours
#	begincommand	- the value can be an shell command for the commandline
#			  this command will have effect when the case of <while> begin
#			  for type SHELL
#	whilecommand	- the value can be an shell command for the commandline
#			  this command have effect durring the case of <while> be given
#			  for type SHELL
#	endcommand	- the value can be an shell command for the commandline
#			  this command will have effect when the case of <while> ending
#			  for type SHELL
#	file		- on any place (better on beginning or after sleep)
#			  can also be defined any external files
#  			  which have the same structre of folder and subroutines like this file
#
#
#   ACTIONS:
#		db	- writing actual state on database
#			  whitch values are will be write from subroutines with having this action
#			  or how long the values are holding in database
#			  you can read in default.conf
#		float	- for type VALUE
#			- when the value or subroutine can have an double
#			- elsewhere only an integer
#
##################################################################################################################


#
# this is an default example for access to the COM port
# follow the path and read there also the definition
# of new types
#------------------------------------------------------
file= examples/basic.conf

#
# this is an example of maxim/dallas semiconductors
# the new type can be taken for the most interfaces
# if you have some of this semiconductors set this documented file
#file= examples/maxim/maxim.conf

#
# this is an example of the K8055 port from Vellemann
# the new type have the same properties of the most interfaces
# if you have this port set this documented file
#file= examples/vellemann/k8055.conf








