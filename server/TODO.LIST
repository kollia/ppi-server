

toDo:
  ppi-server
  - when ppi-client open an second connection to server for hearing
    it have the same behavior like the first connection
    but the server do not check whether both connections
    has the same user.
    And also when the first connection changing to an other user
    the second have not to change, it makes automatic
  - make possible for client editor to reconnect
    when server was stopping before
  - subroutine objects of portBaseClass has two methods (getType() and getSubroutineType())
    which make the same things. remove one of them
  - when server by starting has no right connection to an ppi-owreader
    inside working list folder running every short time try to connect
    but when while server correct running, an ppi-owreader connection has broken
    working list do not get any info to try for reconnection 
  - by calculation of last changing time inside ListCalculator
    normally it calculate current time by any calculation given from script
    but there exist also method for do not calculate current time
    make this usable for user inside action property
    also to take no last changing time inside if sentences
  - make also possible to starting ppi-owreader processes per time over TIMER subroutine
  - make possible to read current subroutine time into subroutine value
  - subroutine READ can currently only read from http connection
    to set query string
    make possible to read content and evaluate
    and also to read other connection types
    maybe read from file or from SOA for WebServices
  - writing man pages for ppi-server (maybe make possibility to write XML-files from MainParams)
  - generate documentation over doxygen
  - making --help usage for ppi-client over own classes of MainParams and ParamCommand
  - writing ncursos/termbox possibility for ppi-client
  - writing external port creation as plug-in by reading shared objects
  - writing shared object libppicppclient.so similar to java class at.kolli.automation.client.ClientConnector.java
  - write methods for ppi_time to calculate also with normally double/integer values
    and also globally friend functions to calculate ppi_time= timeval/double/integer + ppi_time
  - finish transforming and receiving IR commands over lirc
  - write QUICK-GUID documentation for first starting with ppi-server
  - make possible for ppi-internet-server to hear on both protocols (IPv4/IPv6) in same time
  - writing communication over SOCKET's
  - making SSL support
  - make Hudson/Jenkins testing
  - writing unit tests
  
  ppi-java-client
  - refactoring hole process to an MVC-pattern
  - create Android-App with project Tabris from eclipse

known bugs:
  ppi-server
  - when server was started where first login of root user is not allowed,
    while running in access.conf will be changed this behavior
    server cannot stopped with command ppi-server stop
  - reading of objectID from OWFS (external port) can be refused
  - by reading of subroutine READ when action set to hold connection
    make some problem by reconnect or thinking connection is open
  - error handling CommandExec->ShellWriter not correct and not documented
  - when content of inform property for folder is fault
    user do not see any error or warning
  - CalculatorContainer do not stopping when result is false
    and an logical >> and('&') <<  with container follow (see power_switch informing folder)
  - subroutine SHELL do not use last changing time from begin/while/end parameter
    for own changing set (and check also whether all other subroutines do right)
  - by pressing some button in ppi-java-client but not allowed
    client get no info to jump toggle button again back out
    maybe set SWITCH routine back to 0 is to fast
    and give no info to database
  - by reading properties from measure.conf
    server do not recognize when an parameter has an content over more rows
    with beginning quotes, but the ending are forgotten
  - TCP string sending with an NULL character ('\0') inside the string makes problems
    do as workaround to filter string before sending to find NULL characters and delete them
    this problem was found by sending much debug session messages
    will be result mostly by sending an 'inform' property of folder to start
    See problems by set inside FileDescriptor class inside method initial
    variable 'm_bNullCharSending' to true
    and to display stopping of ppi-server on command line where server running
    define macro __WRONGSTRINGSEND_WORKAROUND to one ('1')
    inside ProcessInterfaceTemplate header file
    and define block reading inside operator method '>>' from FilderDescriptor class
    variable char buf[] higher (maybe to 3074), to getting error faster
    possible implementation of NULL characters can be cause by IMethodStringStream or OMethodStringStream 
    (should be tested)
    








