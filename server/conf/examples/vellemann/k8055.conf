##################################################################################
#
#      ppi-server config file of measure routines
#      writen by Alexander Kolli <ppi-server@magnificat.at>
#
#
#  this config file k8055.conf have same structure of folder and subroutines
#  like measure.conf and is for the experimantal Vellemann k8055 USB board.
#  If you have this port, this is an example to use the standard funktionality.
#  Copy the file k8055.desktop from the same directory
#  into the ppi-client folder, to see the result in the java-client.
#  On Bord you can jumper 0 - 3 to have access from the computer
#  this example is written for jumper 0 witch should be also defined in server.conf
#
#   TYPES:          properties and actions:
#	Vk8055		properties: <ID>, [pin], [priority], [cache], [begin|while|end]
#			actions= <write|read>, [current], [cache]
#	    [ access to an pin describt below on jumperd ID
#       when for writing pin's an propertie begin, while or end be set
#       defining from outside (any client hanging on server) do not have any functionality ]
#
#   PROPERTIES:
#	ID		- address 0 - 3 defined in server.conf and jumperd on board
#	pin		- 01 - 08			digital output (range 0 to 1)
#			  I1 - I5			digital input (range 0 to 1)
#			  PWM1 - PWM2			analog output (range 0 to 255)
#			  A1 - A2			analog input (range 0 to 255)
#			  counter1 - counter2		read counter
#			  debounce1 - debouncel2	set debounce time for counter (range 0 to 7450)
#			  reset1 - reset2		reset counter (range 0 to 1)
#	priority	- priority of writing
#			  all pins are holding in an queue to write in serie.
#			  if in the queue more than one chips/pins 
#			  higher prioritys will be concerned of writing before the other
#			  (allowed priority 1 (highest) to priority 9999 (lowest))
#	cache		- all chips are reading in an cache always again after this defined seconds
#			  If this PROPERTY not be set, the default cache from defaultmaxim.conf be taken
#	begin/while/end - write value when state of begin, while or end be given, otherwise when not set
#                         all the time when subroutine passing
#			  the value can be an defined-value and can only used if port is defined for output
#	value		- write this value when defined, or the current value of the subroutine
#			  the value can be an defined-value and can only used if port is defined for output
#	default		- default value by starting application and value not defined in databae
#			  or value is out of range from while.
#			  When value not be defined and value out of range from min or max
#			  the output is not the default but rather by lower the min value of min
#			  or higher as max value of max
#
#    ACTIONS:
#	current	- only by action read for chips witch reading an contact (0|1 bit),
#		  do only read the actual state from chip.
#		  Otherwise the server check also whether the pin gets an contact
#		  between the last reading
#	cache	- only by action write in one folder by the same chip witch have more 
#		  than one pin. It will be write the current state into an queue
#		  and write all states by the next pin without action cache
#		  to writing simultaneosly
#	db	- writing actual state on database
#	
#
###################################################################################


folder= writeVellemann
#~~~~~~~~~~~~~~~~~~~~~~
name= digital01
type= SWITCH
action= db
perm= change

name= digital01set
type= Vk8055
ID= 0
pin= 01
value= digital01
while= digital01 != digital01set
priority= 1

name= digital02
type= Vk8055
ID= 0
pin= 02
priority= 2
action= db
perm= change

name= digital03
type= Vk8055
ID= 0
pin= 03
priority= 2
action= db
perm= change

name= digital04
type= Vk8055
ID= 0
pin= 04
priority= 2
action= db
perm= change

name= digital05
type= Vk8055
ID= 0
pin= 05
priority= 2
action= db
perm= change

name= digital06
type= Vk8055
ID= 0
pin= 06
priority= 2
action= db
perm= change

name= digital07
type= Vk8055
ID= 0
pin= 07
priority= 2
action= db
perm= change

name= digital08
type= Vk8055
ID= 0
pin= 08
priority= 2
action= db
perm= change

name= analogPWM1
type= VALUE
action= db
perm= change

name= analogPWM1set
type= Vk8055
ID= 0
pin= PWM1
priority= 2
value= analogPWM1
while= analogPWM1 != analogPWM1set

name= analogPWM2
type= Vk8055
ID= 0
pin= PWM2
priority= 2
action= db
perm= change

name= debounce1
type= VALUE
min= 0
max= 3
perm= change
action= db
default= 2

name= debounce1set
type= Vk8055
ID= 0
pin= debounce1
value= debounce1=0 ? 0 : debounce1=1 ? 2 : debounce1=2 ? 10 : 1000
while= debounce1 != debounce1done
priority= 2

name= debounce1done
type= VALUE
while= debounce1
default= 4

name= debounce2
type= VALUE
min= 0
max= 3
perm= change
action= db
default= 2

name= debounce2set
type= Vk8055
ID= 0
pin= debounce2
value= debounce2=0 ? 0 : debounce2=1 ? 2 : debounce2=2 ? 10 : 1000
while= debounce2 != debounce2done
priority= 2

name= debounce2done
type= VALUE
while= debounce2
default= 4

name= reset1
type= Vk8055
ID= 0
pin= reset1
priority= 2
perm= change

name= reset2
type= Vk8055
ID= 0
pin= reset2
priority= 2
while= reset2
value= 1
perm= change

folder= readVellemann
#~~~~~~~~~~~~~~~~~~~~~~
name= digitalI1_board
type= Vk8055
perm= read
ID= 0
pin= I1
#cache= 0.05 # only this subroutine running in the cache of 0.05, all other from the default.conf with cache 0.1
	    # this value be set for an example. If you do not need, delete this row

name= digitalI1
type= SWITCH
while= digitalI1_board
perm= read

name= digitalI2_board
type= Vk8055
perm= read
ID= 0
pin= I2

name= digitalI2
type= SWITCH
while= digitalI2_board
perm= read

name= digitalI3
type= Vk8055
perm= read
ID= 0
pin= I3

name= digitalI4
type= Vk8055
perm= read
ID= 0
pin= I4

name= digitalI5
type= Vk8055
perm= read
ID= 0
pin= I5

name= analogA1
type= Vk8055
perm= read
ID= 0
pin= A1
cache= 0.1

name= analogA2
type= Vk8055
perm= read
ID= 0
pin= A2
cache= 0.1

name= counter1
type= Vk8055
perm= read
ID= 0
pin= counter1
cache= 0.1

name= counter2
type= Vk8055
perm= read
ID= 0
pin= counter2
cache= 0.1
