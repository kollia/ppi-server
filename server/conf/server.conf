###################################################################################
#
#      ppi-server server.conf
#      writen by Alexander Kolli
#
###################################################################################



########################################
# processes running in userid of defaultuser
# and external readers in userid of defaultextuser
# when no runuser be set inside specific port properties
# reading userid's from passwd
#
passwd= /etc/passwd
defaultuser= nobody
defaultextuser= extports

########################################
# server should listen on follow host
# when listen defined with ip6-localhost or ::1
# server listen on localhost for IPv4 and IPv6 addresses
# by definition with localhost or 127.0.0.1 listen only to IPv4
# otherwise if listen not be set or defined with ::*
# server listen in hole IPv4 and IPv6 intranet
# or internet when access be given
# by definition with only an star *
# listen only for IPv4 addresses
#
listen= ip6-localhost
# server listen on follow port
port= 20004

########################################
# how much threads should be waiting
# for new connections.
# set maxconnectionthreads if minconnectionthreads
# be undershoot by free threads without connection.
# If minconnectionthread is 0
# maxconnectionthreads is fix count for waiting threads
# no new will be created
# an client with no hearing functionality need 1 thread
# like ppi-client without option --hear, otherwise 2
# provided java-client need also 2 threads
#
minconnectionthreads= 2
maxconnectionthreads= 4

########################################
# intern communication of processes
# on follow communication host
# and communication port
#
communicationhost= localhost
communicationport= 20005

########################################
# log-level for logging
# allowed status: DEBUG
#                 INFO
#                 WARNING
#                 ERROR
#                 ALERT
log= INFO

########################################
# log interval in seconds for TIMELOG
# some logging can fill often the log-file
# in this case, when the server running
# as production system, it's better
# when the same ERROR isn't logged so often.
#
timelogSec= 43200 # for 12 hours = 2 logs per day
#timelogSec= 60 # 1 minute, maybe better for debug session

########################################
# create an new log-file after follow days
#
newfileAfterDays= 1

########################################
# delete log files after follow days
# have to be modular of newfileAfterDays
# if value is 0, do not delete any
#
deleteLogFiles= 2

########################################
# TIMER subroutines can starting earlier
# when action exact be set
# or calculate possible finished time
# when parameter finished be set
# this behavior save the folder running
# length time or finished time inside database
# and can be differ by different CPU time
# if split be set to 100 no differ will be done
# otherwise the value should be modular to 100
# ( 1, 2, 5, 10, 20 or 50 )
folderlength_split= 100
finishedtime_split= 100

########################################
# definition of extra database threads
# for every folder
#  DIRECT - every folder writing directly into database
#           no extra thread will be created
#  ONE    - creating one extra thread for all folders
#           which searching for database entries
#           to send to database-server
#  EVERY  - creating for every folder an extra thread
#           to send to database-server
folder_db_threads= ONE

########################################
# database is writing into an file ('entrys_[date]')
# after follow MB writing an new file
#
newdbafter= 15

########################################
# after an new database file created
# old database file will be thinning
# to hold the process activity lower
# thinning thread wait after reading
# every line follow microseconds
sleepAllThinRows= 1000

########################################
# by define of holding values inside thinned database
# where differ between folder and subroutines
# as joker for this two strings (folder/subroutines)
# can be used ? and or * 
# when parameter 'usefsdefault_regex' set as false
# otherwise regular expressions be used
#
usefsdefault_regex= false

########################################
# measuredness of measureing on physical ports COM/LPT
#
measuredness= 10000
measurednessCount= 25
microsecCount= 20

########################################
# which process are started
# on ppi-server
# (this parameters only usefull for debugging
#  when the developer want to start self
#  the process, otherwise they should be all true)
#
databaseserver= true
internetserver= true
owreaders= true

########################################
# for all follow external ports (owserver)
# when an subroutine finding no correct server
# measure thread starting in an sequence
# of 'serversearch' seconds folder list 
# of subroutines to search again
serversearch= 15

########################################
# COM and LPT ports
# the first COM is COM1, the second COM2 and so on
# also by LPT-ports
# LPT now not realy implemented
#
[PORT]
COM= 0x3F8:/dev/ttyS0 # COM1
COM= 0x2F8:/dev/ttyS1 # COM2
COM= 0x3E8:/dev/ttyS2 # COM3
COM= 0x2E8:/dev/ttyS3 # COM4
LPT= 0x3BC:/dev/lp0 # LPT1
LPT= 0x378:/dev/lp1 # LPT2
LPT= 0x278:/dev/lp2 # LPT3

########################################
# LIRC receiver or transmitter
#
[LIRC]
runuser= nobody
socket= /var/run/lircd

########################################
# Vellemann k8055 port
# can be set with address
# jumperd on port 0 - 3
# more than one port can be used
#
[Vk8055]
port= 0
#port= 1

########################################
# owfs initialization for maxim/dallas semicontuctors
# the maximinit property
# is the initialization for which interface pluged in
# and can be defined more than once
# to run paralell inside several processes
#   COM1 -  -d /dev/ttyS0
#   USB  -  --usb=all or -uall
#            or differend for usb masters -u and -u2
#   tcp  -  -s localhost:4304
# for better description see http://www.owfs.org
#
[OWFS]
maximinit= --usb=all
#maximinit= -d /dev/ttyS0








