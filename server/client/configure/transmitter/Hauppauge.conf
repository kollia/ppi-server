##################################################################################
#
#      ppi-server configuration file of measure routines for lirc
#      generated from ppi-mconfig deamon
#
#
#  this configuration file Hauppauge.conf have same structure of folder and subroutines
#  like measure.conf to use any receiver or transmitter inside ppi-server
#  to receive or transmit signals over lircd.
#  Copy this file into the configuration sub folder (conf) of ppi-server
#  and also the corresponding file Hauppauge.desktop to the client directory
#  An description to use lirc on command line or better understanding, read http://www.lirc.org
#
#
#   TYPES:       properties and actions:
#       LIRC         properties: <ID>, <pin>, [count], [priority], [cache], [value&(begin|while|end)]
#                    actions= <receive|send|send_once>, [db]
#              [access to an chip with the unique address from maxim on property <id>    ]
#
#   PROPERTIES:
#       ID         - name of remote group in /etc/lirc/lircd.conf after begin remote
#       pin        - receiving/transmitting code between begin end codes
#       priority   - priority of writing
#                    all pins are holding in an queue to write in serie.
#                    if in the queue more than one chips/pins
#                    higher priority's will be concerned of writing before the other
#                    (allowed priority 1 (highest) to priority 9999 (lowest))
#       value      - which value should be writing
#                    the value can be an defined-value
#                    only when set action to send_once or send
#       count      - send signal units by sending
#                    only when action send_once is set
#       begin      - do writing if begin status occurring
#                    the value can be an defined-value
#                    only when set action to send_once or send
#       while      - do writing while state be set
#                    the value can be an defined-value
#                    only when set action to send_once or send
#       end        - set pin to 0 if expression be correct
#                    the value can be an defined-value
#                    only when set action to send_once or send
#       perm       - permission group to read or change this subroutine
#
#  ACTIONS:
#       receive    - receiving code from device
#       send_once  - sending one signal over device
#       send       - sending start and end signal over device
#       db         - writing actual state on database
#
#
###################################################################################





# ###################################################################################
# ###################################################################################
# ####
# ####
# ####   write all folder for remote control
# ####          'Hauppauge'
# ####
# ####
# ###################################################################################
# ###################################################################################


#
# This under comments are templates to copy in your own measure.conf or layout file.
# The main subroutines are 'count_steps'  - routine to send signal over transmitter
#                                           and count the value actual_step higher or lower
#            and of course 'actual_step'  - where you can read the actual count
#
# 'count_steps' is an subroutine from type 'VALUE' where you can fill in,
#               with an subroutine from type SET, how much steps the remote folder should count
#               always in the direction and properties defined before in the GUI (maybe ppi-java-client).
#               This subroutine should be used only in own defined measure.conf files.
#               (measure.conf means also self named files xxx.conf linked from main measure.conf file).
#               For layout files use the subroutine 'count' from type SWITCH, when you want to use as button.
#               You can also use this 'count' subroutine in an configuration file when you watch
#               the subroutine 'actual_step' and set after right value 'count' to 0.
# 'actual_step' if for using in an own subroutine with 'from', 'begin', 'while' or 'end' parameter 
#               like subroutines from type SET, SWITCH, VALUE and so on.
#
#        example to read 'actual_step':
#                     name= myNewSubroutine
#                     type= SWITCH
#                     begin= Hauppauge:actual_step = 1
#                     end= Hauppauge:actual_step = 0
#        or fill steps into 'count_steps':
#                     name= setCounts
#                     type= SET
#                     from= 3
#                     set= Hauppauge:count_steps
#                     while= anyFolder:subroutine = 1
#
# Important could be also the following subroutines for native access: 
#      count          - also to send signal over transmitter, described before
#      receive        - receive signal from receiver or subroutine 'count' (count_steps)
#                       is activated from any client or measure.conf
#      what           - whether subroutine 'count' was as last activated (value 0)
#                       or lirc has received as last a signal (value 1)
#      wait_back_time - value is 1 while folder wait for time to show back the default value
#                       This subroutine will be activated an time after 'receive' was active
#                       when 'first touch show' inside the GUI is checked 
#                       or the button folder is defined to 'set only actual step' with more than one digits
#                       In this case the actual_step field has end of define when wait_back_time is 0
#      receive_signal - get signal number from receiver
#                       (not the same as actual_step but the count length of pressing on transmitter)
#
#
#
# for remote Hauppauge
#
#        button 'TV'
#            Hauppauge_TV:count_steps
#            Hauppauge_TV:actual_step
#            Hauppauge_TV:count
#            Hauppauge_TV:receive
#            Hauppauge_TV:what
#            Hauppauge_TV:wait_back_time
#            Hauppauge_TV:receive_signal
#
#        button 'CH +'
#            Hauppauge_KEY_CHANNELUP:count_steps
#            Hauppauge_KEY_CHANNELUP:actual_step
#            Hauppauge_KEY_CHANNELUP:count
#            Hauppauge_KEY_CHANNELUP:receive
#            Hauppauge_KEY_CHANNELUP:what
#            Hauppauge_KEY_CHANNELUP:wait_back_time
#            Hauppauge_KEY_CHANNELUP:receive_signal
#
#        button 'RADIO'
#            Hauppauge_RADIO:count_steps
#            Hauppauge_RADIO:actual_step
#            Hauppauge_RADIO:count
#            Hauppauge_RADIO:receive
#            Hauppauge_RADIO:what
#            Hauppauge_RADIO:wait_back_time
#            Hauppauge_RADIO:receive_signal
#
#        button 'VOL -'
#            Hauppauge_KEY_VOLUMEDOWN:count_steps
#            Hauppauge_KEY_VOLUMEDOWN:actual_step
#            Hauppauge_KEY_VOLUMEDOWN:count
#            Hauppauge_KEY_VOLUMEDOWN:receive
#            Hauppauge_KEY_VOLUMEDOWN:what
#            Hauppauge_KEY_VOLUMEDOWN:wait_back_time
#            Hauppauge_KEY_VOLUMEDOWN:receive_signal
#
#        button 'FULL SCREEN'
#            Hauppauge_FULL_SCREEN:count_steps
#            Hauppauge_FULL_SCREEN:actual_step
#            Hauppauge_FULL_SCREEN:count
#            Hauppauge_FULL_SCREEN:receive
#            Hauppauge_FULL_SCREEN:what
#            Hauppauge_FULL_SCREEN:wait_back_time
#            Hauppauge_FULL_SCREEN:receive_signal
#
#        button 'VOL +'
#            Hauppauge_KEY_VOLUMEUP:count_steps
#            Hauppauge_KEY_VOLUMEUP:actual_step
#            Hauppauge_KEY_VOLUMEUP:count
#            Hauppauge_KEY_VOLUMEUP:receive
#            Hauppauge_KEY_VOLUMEUP:what
#            Hauppauge_KEY_VOLUMEUP:wait_back_time
#            Hauppauge_KEY_VOLUMEUP:receive_signal
#
#        button 'MUTE'
#            Hauppauge_KEY_MUTE:count_steps
#            Hauppauge_KEY_MUTE:actual_step
#            Hauppauge_KEY_MUTE:count
#            Hauppauge_KEY_MUTE:receive
#            Hauppauge_KEY_MUTE:what
#            Hauppauge_KEY_MUTE:wait_back_time
#            Hauppauge_KEY_MUTE:receive_signal
#
#        button 'CH -'
#            Hauppauge_KEY_CHANNELDOWN:count_steps
#            Hauppauge_KEY_CHANNELDOWN:actual_step
#            Hauppauge_KEY_CHANNELDOWN:count
#            Hauppauge_KEY_CHANNELDOWN:receive
#            Hauppauge_KEY_CHANNELDOWN:what
#            Hauppauge_KEY_CHANNELDOWN:wait_back_time
#            Hauppauge_KEY_CHANNELDOWN:receive_signal
#
#        button 'SOURCE'
#            Hauppauge_SOURCE:count_steps
#            Hauppauge_SOURCE:actual_step
#            Hauppauge_SOURCE:count
#            Hauppauge_SOURCE:receive
#            Hauppauge_SOURCE:what
#            Hauppauge_SOURCE:wait_back_time
#            Hauppauge_SOURCE:receive_signal
#
#        button '1'
#            Hauppauge_KEY_1:count_steps
#            Hauppauge_KEY_1:actual_step
#            Hauppauge_KEY_1:count
#            Hauppauge_KEY_1:receive
#            Hauppauge_KEY_1:what
#            Hauppauge_KEY_1:wait_back_time
#            Hauppauge_KEY_1:receive_signal
#
#        button '2'
#            Hauppauge_KEY_2:count_steps
#            Hauppauge_KEY_2:actual_step
#            Hauppauge_KEY_2:count
#            Hauppauge_KEY_2:receive
#            Hauppauge_KEY_2:what
#            Hauppauge_KEY_2:wait_back_time
#            Hauppauge_KEY_2:receive_signal
#
#        button '3'
#            Hauppauge_KEY_3:count_steps
#            Hauppauge_KEY_3:actual_step
#            Hauppauge_KEY_3:count
#            Hauppauge_KEY_3:receive
#            Hauppauge_KEY_3:what
#            Hauppauge_KEY_3:wait_back_time
#            Hauppauge_KEY_3:receive_signal
#
#        button '4'
#            Hauppauge_KEY_4:count_steps
#            Hauppauge_KEY_4:actual_step
#            Hauppauge_KEY_4:count
#            Hauppauge_KEY_4:receive
#            Hauppauge_KEY_4:what
#            Hauppauge_KEY_4:wait_back_time
#            Hauppauge_KEY_4:receive_signal
#
#        button '5'
#            Hauppauge_KEY_5:count_steps
#            Hauppauge_KEY_5:actual_step
#            Hauppauge_KEY_5:count
#            Hauppauge_KEY_5:receive
#            Hauppauge_KEY_5:what
#            Hauppauge_KEY_5:wait_back_time
#            Hauppauge_KEY_5:receive_signal
#
#        button '6'
#            Hauppauge_KEY_6:count_steps
#            Hauppauge_KEY_6:actual_step
#            Hauppauge_KEY_6:count
#            Hauppauge_KEY_6:receive
#            Hauppauge_KEY_6:what
#            Hauppauge_KEY_6:wait_back_time
#            Hauppauge_KEY_6:receive_signal
#
#        button '7'
#            Hauppauge_KEY_7:count_steps
#            Hauppauge_KEY_7:actual_step
#            Hauppauge_KEY_7:count
#            Hauppauge_KEY_7:receive
#            Hauppauge_KEY_7:what
#            Hauppauge_KEY_7:wait_back_time
#            Hauppauge_KEY_7:receive_signal
#
#        button '8'
#            Hauppauge_KEY_8:count_steps
#            Hauppauge_KEY_8:actual_step
#            Hauppauge_KEY_8:count
#            Hauppauge_KEY_8:receive
#            Hauppauge_KEY_8:what
#            Hauppauge_KEY_8:wait_back_time
#            Hauppauge_KEY_8:receive_signal
#
#        button '9'
#            Hauppauge_KEY_9:count_steps
#            Hauppauge_KEY_9:actual_step
#            Hauppauge_KEY_9:count
#            Hauppauge_KEY_9:receive
#            Hauppauge_KEY_9:what
#            Hauppauge_KEY_9:wait_back_time
#            Hauppauge_KEY_9:receive_signal
#
#        button 'RESERVED'
#            Hauppauge_RESERVED:count_steps
#            Hauppauge_RESERVED:actual_step
#            Hauppauge_RESERVED:count
#            Hauppauge_RESERVED:receive
#            Hauppauge_RESERVED:what
#            Hauppauge_RESERVED:wait_back_time
#            Hauppauge_RESERVED:receive_signal
#
#        button '0'
#            Hauppauge_KEY_0:count_steps
#            Hauppauge_KEY_0:actual_step
#            Hauppauge_KEY_0:count
#            Hauppauge_KEY_0:receive
#            Hauppauge_KEY_0:what
#            Hauppauge_KEY_0:wait_back_time
#            Hauppauge_KEY_0:receive_signal
#
#        button 'MINIMIZE'
#            Hauppauge_MINIMIZE:count_steps
#            Hauppauge_MINIMIZE:actual_step
#            Hauppauge_MINIMIZE:count
#            Hauppauge_MINIMIZE:receive
#            Hauppauge_MINIMIZE:what
#            Hauppauge_MINIMIZE:wait_back_time
#            Hauppauge_MINIMIZE:receive_signal
#



# declaration of all buttons from transmitter seen on client to activate
folder= Hauppauge__show
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# button 'TV'
name= TV
type= SWITCH
end= true
default= 1
perm= lconfchange

# button 'CH +'
name= KEY_CHANNELUP
type= SWITCH
end= true
perm= lconfchange

# button 'RADIO'
name= RADIO
type= SWITCH
end= true
perm= lconfchange

# button 'VOL -'
name= KEY_VOLUMEDOWN
type= SWITCH
end= true
perm= lconfchange

# button 'FULL SCREEN'
name= FULL_SCREEN
type= SWITCH
end= true
perm= lconfchange

# button 'VOL +'
name= KEY_VOLUMEUP
type= SWITCH
end= true
perm= lconfchange

# button 'MUTE'
name= KEY_MUTE
type= SWITCH
end= true
perm= lconfchange

# button 'CH -'
name= KEY_CHANNELDOWN
type= SWITCH
end= true
perm= lconfchange

# button 'SOURCE'
name= SOURCE
type= SWITCH
end= true
perm= lconfchange

# button '1'
name= KEY_1
type= SWITCH
end= true
perm= lconfchange

# button '2'
name= KEY_2
type= SWITCH
end= true
perm= lconfchange

# button '3'
name= KEY_3
type= SWITCH
end= true
perm= lconfchange

# button '4'
name= KEY_4
type= SWITCH
end= true
perm= lconfchange

# button '5'
name= KEY_5
type= SWITCH
end= true
perm= lconfchange

# button '6'
name= KEY_6
type= SWITCH
end= true
perm= lconfchange

# button '7'
name= KEY_7
type= SWITCH
end= true
perm= lconfchange

# button '8'
name= KEY_8
type= SWITCH
end= true
perm= lconfchange

# button '9'
name= KEY_9
type= SWITCH
end= true
perm= lconfchange

# button 'RESERVED'
name= RESERVED
type= SWITCH
end= true
perm= lconfchange

# button '0'
name= KEY_0
type= SWITCH
end= true
perm= lconfchange

# button 'MINIMIZE'
name= MINIMIZE
type= SWITCH
end= true
perm= lconfchange



#  change properties for transmitter on client.
#  Fields to change, seen on right side of all transmitter buttons
folder= Hauppauge__choice
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# correct unique group number of button
name= correct_group
type= VALUE
link= Hauppauge_TV:correct_group
link= Hauppauge_KEY_CHANNELUP:correct_group
link= Hauppauge_RADIO:correct_group
link= Hauppauge_KEY_VOLUMEDOWN:correct_group
link= Hauppauge_FULL_SCREEN:correct_group
link= Hauppauge_KEY_VOLUMEUP:correct_group
link= Hauppauge_KEY_MUTE:correct_group
link= Hauppauge_KEY_CHANNELDOWN:correct_group
link= Hauppauge_SOURCE:correct_group
link= Hauppauge_KEY_1:correct_group
link= Hauppauge_KEY_2:correct_group
link= Hauppauge_KEY_3:correct_group
link= Hauppauge_KEY_4:correct_group
link= Hauppauge_KEY_5:correct_group
link= Hauppauge_KEY_6:correct_group
link= Hauppauge_KEY_7:correct_group
link= Hauppauge_KEY_8:correct_group
link= Hauppauge_KEY_9:correct_group
link= Hauppauge_RESERVED:correct_group
link= Hauppauge_KEY_0:correct_group
link= Hauppauge_MINIMIZE:correct_group
lwhile= Hauppauge__show:TV ? 1 : Hauppauge__show:KEY_CHANNELUP ? 2 : Hauppauge__show:RADIO ? 3 : Hauppauge__show:KEY_VOLUMEDOWN ? 4 : Hauppauge__show:FULL_SCREEN ? 5 : Hauppauge__show:KEY_VOLUMEUP ? 6 : Hauppauge__show:KEY_MUTE ? 7 : Hauppauge__show:KEY_CHANNELDOWN ? 8 : Hauppauge__show:SOURCE ? 9 : Hauppauge__show:KEY_1 ? 10 : Hauppauge__show:KEY_2 ? 11 : Hauppauge__show:KEY_3 ? 12 : Hauppauge__show:KEY_4 ? 13 : Hauppauge__show:KEY_5 ? 14 : Hauppauge__show:KEY_6 ? 15 : Hauppauge__show:KEY_7 ? 16 : Hauppauge__show:KEY_8 ? 17 : Hauppauge__show:KEY_9 ? 18 : Hauppauge__show:RESERVED ? 19 : Hauppauge__show:KEY_0 ? 20 : Hauppauge__show:MINIMIZE ? 21 : 1
action= int
perm= lconfread

# group of button which hold steps
name= group
type= VALUE
link= Hauppauge_TV:group
link= Hauppauge_KEY_CHANNELUP:group
link= Hauppauge_RADIO:group
link= Hauppauge_KEY_VOLUMEDOWN:group
link= Hauppauge_FULL_SCREEN:group
link= Hauppauge_KEY_VOLUMEUP:group
link= Hauppauge_KEY_MUTE:group
link= Hauppauge_KEY_CHANNELDOWN:group
link= Hauppauge_SOURCE:group
link= Hauppauge_KEY_1:group
link= Hauppauge_KEY_2:group
link= Hauppauge_KEY_3:group
link= Hauppauge_KEY_4:group
link= Hauppauge_KEY_5:group
link= Hauppauge_KEY_6:group
link= Hauppauge_KEY_7:group
link= Hauppauge_KEY_8:group
link= Hauppauge_KEY_9:group
link= Hauppauge_RESERVED:group
link= Hauppauge_KEY_0:group
link= Hauppauge_MINIMIZE:group
lwhile= correct_group
action= int
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND        = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= correct_group
action= int
perm= lconfchange

# button for client to send signal over transmitter
name= count
type= VALUE
link= Hauppauge_TV:count
link= Hauppauge_KEY_CHANNELUP:count
link= Hauppauge_RADIO:count
link= Hauppauge_KEY_VOLUMEDOWN:count
link= Hauppauge_FULL_SCREEN:count
link= Hauppauge_KEY_VOLUMEUP:count
link= Hauppauge_KEY_MUTE:count
link= Hauppauge_KEY_CHANNELDOWN:count
link= Hauppauge_SOURCE:count
link= Hauppauge_KEY_1:count
link= Hauppauge_KEY_2:count
link= Hauppauge_KEY_3:count
link= Hauppauge_KEY_4:count
link= Hauppauge_KEY_5:count
link= Hauppauge_KEY_6:count
link= Hauppauge_KEY_7:count
link= Hauppauge_KEY_8:count
link= Hauppauge_KEY_9:count
link= Hauppauge_RESERVED:count
link= Hauppauge_KEY_0:count
link= Hauppauge_MINIMIZE:count
lwhile= correct_group
action= int
perm= lconfchange

# receive signal from receiver or button was pressed
name= receive
type= VALUE
link= Hauppauge_TV:receive
link= Hauppauge_KEY_CHANNELUP:receive
link= Hauppauge_RADIO:receive
link= Hauppauge_KEY_VOLUMEDOWN:receive
link= Hauppauge_FULL_SCREEN:receive
link= Hauppauge_KEY_VOLUMEUP:receive
link= Hauppauge_KEY_MUTE:receive
link= Hauppauge_KEY_CHANNELDOWN:receive
link= Hauppauge_SOURCE:receive
link= Hauppauge_KEY_1:receive
link= Hauppauge_KEY_2:receive
link= Hauppauge_KEY_3:receive
link= Hauppauge_KEY_4:receive
link= Hauppauge_KEY_5:receive
link= Hauppauge_KEY_6:receive
link= Hauppauge_KEY_7:receive
link= Hauppauge_KEY_8:receive
link= Hauppauge_KEY_9:receive
link= Hauppauge_RESERVED:receive
link= Hauppauge_KEY_0:receive
link= Hauppauge_MINIMIZE:receive
lwhile= correct_group
action= int
perm= lconfread

# button to calculating 'wait after' time for few steps
name= calcbutton
type= VALUE
link= Hauppauge_TV:calcbutton
link= Hauppauge_KEY_CHANNELUP:calcbutton
link= Hauppauge_RADIO:calcbutton
link= Hauppauge_KEY_VOLUMEDOWN:calcbutton
link= Hauppauge_FULL_SCREEN:calcbutton
link= Hauppauge_KEY_VOLUMEUP:calcbutton
link= Hauppauge_KEY_MUTE:calcbutton
link= Hauppauge_KEY_CHANNELDOWN:calcbutton
link= Hauppauge_SOURCE:calcbutton
link= Hauppauge_KEY_1:calcbutton
link= Hauppauge_KEY_2:calcbutton
link= Hauppauge_KEY_3:calcbutton
link= Hauppauge_KEY_4:calcbutton
link= Hauppauge_KEY_5:calcbutton
link= Hauppauge_KEY_6:calcbutton
link= Hauppauge_KEY_7:calcbutton
link= Hauppauge_KEY_8:calcbutton
link= Hauppauge_KEY_9:calcbutton
link= Hauppauge_RESERVED:calcbutton
link= Hauppauge_KEY_0:calcbutton
link= Hauppauge_MINIMIZE:calcbutton
lwhile= correct_group
action= int
perm= lconfchange

# minimal count of units to make one step on case
name= lirc_step
type= VALUE
min= 1
action= int | db
perm= lconfchange
min= 1
default= 1

# repeat when sending is set to SEND ONCE
action= int
name= double
type= SWITCH
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= VALUE
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= correct_group
perm= lconfchange

# calculating 'wait after' lirc steps from receiving highest lirc count thru steps
name= calculate_lirc
type= VALUE
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= correct_group
action= int
perm= lconfchange

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
link= Hauppauge_TV:wait_back_time
link= Hauppauge_KEY_CHANNELUP:wait_back_time
link= Hauppauge_RADIO:wait_back_time
link= Hauppauge_KEY_VOLUMEDOWN:wait_back_time
link= Hauppauge_FULL_SCREEN:wait_back_time
link= Hauppauge_KEY_VOLUMEUP:wait_back_time
link= Hauppauge_KEY_MUTE:wait_back_time
link= Hauppauge_KEY_CHANNELDOWN:wait_back_time
link= Hauppauge_SOURCE:wait_back_time
link= Hauppauge_KEY_1:wait_back_time
link= Hauppauge_KEY_2:wait_back_time
link= Hauppauge_KEY_3:wait_back_time
link= Hauppauge_KEY_4:wait_back_time
link= Hauppauge_KEY_5:wait_back_time
link= Hauppauge_KEY_6:wait_back_time
link= Hauppauge_KEY_7:wait_back_time
link= Hauppauge_KEY_8:wait_back_time
link= Hauppauge_KEY_9:wait_back_time
link= Hauppauge_RESERVED:wait_back_time
link= Hauppauge_KEY_0:wait_back_time
link= Hauppauge_MINIMIZE:wait_back_time
lwhile= correct_group
perm= read

# how long the time after last pressed should measured
name= back_time
type= VALUE
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= correct_group
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
link= Hauppauge_TV:set_steps
link= Hauppauge_KEY_CHANNELUP:set_steps
link= Hauppauge_RADIO:set_steps
link= Hauppauge_KEY_VOLUMEDOWN:set_steps
link= Hauppauge_FULL_SCREEN:set_steps
link= Hauppauge_KEY_VOLUMEUP:set_steps
link= Hauppauge_KEY_MUTE:set_steps
link= Hauppauge_KEY_CHANNELDOWN:set_steps
link= Hauppauge_SOURCE:set_steps
link= Hauppauge_KEY_1:set_steps
link= Hauppauge_KEY_2:set_steps
link= Hauppauge_KEY_3:set_steps
link= Hauppauge_KEY_4:set_steps
link= Hauppauge_KEY_5:set_steps
link= Hauppauge_KEY_6:set_steps
link= Hauppauge_KEY_7:set_steps
link= Hauppauge_KEY_8:set_steps
link= Hauppauge_KEY_9:set_steps
link= Hauppauge_RESERVED:set_steps
link= Hauppauge_KEY_0:set_steps
link= Hauppauge_MINIMIZE:set_steps
lwhile= correct_group
perm= lconfchange

# how many presses of numbers shuld finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= correct_group
action= int
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
link= Hauppauge_TV:to_value
link= Hauppauge_KEY_CHANNELUP:to_value
link= Hauppauge_RADIO:to_value
link= Hauppauge_KEY_VOLUMEDOWN:to_value
link= Hauppauge_FULL_SCREEN:to_value
link= Hauppauge_KEY_VOLUMEUP:to_value
link= Hauppauge_KEY_MUTE:to_value
link= Hauppauge_KEY_CHANNELDOWN:to_value
link= Hauppauge_SOURCE:to_value
link= Hauppauge_KEY_1:to_value
link= Hauppauge_KEY_2:to_value
link= Hauppauge_KEY_3:to_value
link= Hauppauge_KEY_4:to_value
link= Hauppauge_KEY_5:to_value
link= Hauppauge_KEY_6:to_value
link= Hauppauge_KEY_7:to_value
link= Hauppauge_KEY_8:to_value
link= Hauppauge_KEY_9:to_value
link= Hauppauge_RESERVED:to_value
link= Hauppauge_KEY_0:to_value
link= Hauppauge_MINIMIZE:to_value
lwhile= correct_group
action= int
perm= lconfchange

# how often the interval of subroutine after is to wait
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= correct_group
action= int
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= correct_group
action= int
perm= lconfchange

# action to count steps in which direction UP_STOP, DOWN_STOP, UP_LOOP, DOWN_LOOP
name= steps_action
type= VALUE
link= Hauppauge_TV:steps_action
link= Hauppauge_KEY_CHANNELUP:steps_action
link= Hauppauge_RADIO:steps_action
link= Hauppauge_KEY_VOLUMEDOWN:steps_action
link= Hauppauge_FULL_SCREEN:steps_action
link= Hauppauge_KEY_VOLUMEUP:steps_action
link= Hauppauge_KEY_MUTE:steps_action
link= Hauppauge_KEY_CHANNELDOWN:steps_action
link= Hauppauge_SOURCE:steps_action
link= Hauppauge_KEY_1:steps_action
link= Hauppauge_KEY_2:steps_action
link= Hauppauge_KEY_3:steps_action
link= Hauppauge_KEY_4:steps_action
link= Hauppauge_KEY_5:steps_action
link= Hauppauge_KEY_6:steps_action
link= Hauppauge_KEY_7:steps_action
link= Hauppauge_KEY_8:steps_action
link= Hauppauge_KEY_9:steps_action
link= Hauppauge_RESERVED:steps_action
link= Hauppauge_KEY_0:steps_action
link= Hauppauge_MINIMIZE:steps_action
lwhile= correct_group
action= int
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= correct_group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
link= Hauppauge_TV:do_run_steps
link= Hauppauge_KEY_CHANNELUP:do_run_steps
link= Hauppauge_RADIO:do_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:do_run_steps
link= Hauppauge_FULL_SCREEN:do_run_steps
link= Hauppauge_KEY_VOLUMEUP:do_run_steps
link= Hauppauge_KEY_MUTE:do_run_steps
link= Hauppauge_KEY_CHANNELDOWN:do_run_steps
link= Hauppauge_SOURCE:do_run_steps
link= Hauppauge_KEY_1:do_run_steps
link= Hauppauge_KEY_2:do_run_steps
link= Hauppauge_KEY_3:do_run_steps
link= Hauppauge_KEY_4:do_run_steps
link= Hauppauge_KEY_5:do_run_steps
link= Hauppauge_KEY_6:do_run_steps
link= Hauppauge_KEY_7:do_run_steps
link= Hauppauge_KEY_8:do_run_steps
link= Hauppauge_KEY_9:do_run_steps
link= Hauppauge_RESERVED:do_run_steps
link= Hauppauge_KEY_0:do_run_steps
link= Hauppauge_MINIMIZE:do_run_steps
lwhile= correct_group
perm= lconfchange

# count of actual step
name= actual_step
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= correct_group
action= int
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= correct_group
min= 0
action= int
perm= lconfchange

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= correct_group
min= 0
action= int
perm= lconfchange

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= correct_group
min= 0
action= int
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= correct_group
min= 0
action= int
perm= lconfchange

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= correct_group
min= 0
action= int
perm= lconfchange

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= correct_group
min= 0
action= int
perm= lconfchange

# extra wait multiplicator for counting successful
name= multi_wait
type= VALUE
min= 1
default= 2




# propteries for button 'TV'
folder= Hauppauge_TV
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 1
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= TV
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 1
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= TV
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= TV
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'CH +'
folder= Hauppauge_KEY_CHANNELUP
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 2
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_CHANNELUP
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 99
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 2
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_CHANNELUP
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_CHANNELUP
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'RADIO'
folder= Hauppauge_RADIO
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 3
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= RADIO
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 3
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= RADIO
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= RADIO
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'VOL -'
folder= Hauppauge_KEY_VOLUMEDOWN
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 4
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_VOLUMEDOWN
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 6
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 30
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 2
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 1
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_VOLUMEDOWN
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_VOLUMEDOWN
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'FULL SCREEN'
folder= Hauppauge_FULL_SCREEN
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 5
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= FULL_SCREEN
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 5
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= FULL_SCREEN
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= FULL_SCREEN
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'VOL +'
folder= Hauppauge_KEY_VOLUMEUP
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 6
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_VOLUMEUP
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 6
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 30
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 2
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 0
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_VOLUMEUP
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_VOLUMEUP
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'MUTE'
folder= Hauppauge_KEY_MUTE
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 7
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_MUTE
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 7
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_MUTE
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_MUTE
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'CH -'
folder= Hauppauge_KEY_CHANNELDOWN
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 8
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_CHANNELDOWN
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 99
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 2
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 3
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_CHANNELDOWN
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_CHANNELDOWN
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'SOURCE'
folder= Hauppauge_SOURCE
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 9
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= SOURCE
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 9
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= SOURCE
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= SOURCE
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '1'
folder= Hauppauge_KEY_1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 10
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_1
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 1
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_1
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_1
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '2'
folder= Hauppauge_KEY_2
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 11
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_2
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 2
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_2
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_2
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '3'
folder= Hauppauge_KEY_3
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 12
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_3
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 3
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_3
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_3
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '4'
folder= Hauppauge_KEY_4
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 13
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_4
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 4
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_4
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_4
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '5'
folder= Hauppauge_KEY_5
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 14
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_5
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 5
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_5
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_5
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '6'
folder= Hauppauge_KEY_6
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 15
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_6
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 6
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_6
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_6
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '7'
folder= Hauppauge_KEY_7
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 16
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_7
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 7
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_7
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_7
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '8'
folder= Hauppauge_KEY_8
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 17
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_8
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 8
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_8
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_8
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '9'
folder= Hauppauge_KEY_9
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 18
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_9
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 9
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_9
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_9
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'RESERVED'
folder= Hauppauge_RESERVED
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 19
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= RESERVED
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 19
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= RESERVED
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= RESERVED
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button '0'
folder= Hauppauge_KEY_0
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 20
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= KEY_0
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 2
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 1
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 2
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= KEY_0
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= KEY_0
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





# propteries for button 'MINIMIZE'
folder= Hauppauge_MINIMIZE
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# unique group number of button
name= correct_group
type= VALUE
default= 21
perm= lconfread



# -------------------------------------------------------------------------------------------------
# --------------------------  begin of read sending from client  ----------------------------------
# how much counts the button folder should count
name= count_steps
type= VALUE
min= 0
action= int
perm= change

# how much counts the button folder should count, added from count_steps
name= count_steps_do
type= VALUE
while= count_steps_do + count_steps
min= 0
action= int
perm= change

# button for client to send signal over transmitter
name= count
type= SWITCH
perm= change

# is marked to true should count more steps from outside
name= run_steps
type= SWITCH
begin= count_steps_do

# button should be the same for hole folder
name= button
type= SWITCH
while= count | count_steps_do

# set only count_steps back to 0
name= count_steps_back
type= SET
from= 0
set= count_steps
while= count_steps > 0

# calculating length of pressed client button
name= pressed
type= TIMER
while= button
action= micro | measure
# --------------------------  end of read sending from client  ------------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------------  begin of read signal from receiver  --------------------------------
# get signal from receiver
name= receive_signal_on
type= LIRC
ID= Hauppauge
pin= MINIMIZE
action= receive

# signal should be the same for hole folder
name= receive_signal
type= VALUE
while= receive_signal_on
action= int
perm= read

# was receive_signal really 0 before?
name= lirc_set_back
type= SET
from= last_next_lirc
set= next_lirc
set= last_lirc_count
while= next_lirc=0 & receive_signal>last_lirc

# calculating first count signal by receive
# (when calculate_lirc has 6 counts -> first count is 1, 12, 18, 24, ... -> calculated as 1, 2, 3, 4, ...)
name= next_lirc
type= VALUE
value= 0
value= 1
value= receive_signal / calculate_lirc
while= receive_signal=0 ? 0 : receive_signal<calculate_lirc ? 1 : 2
action= int

# value is true when any first count is reached
name= lirc_set
type= SWITCH
while= next_lirc!=0 & next_lirc != last_lirc_count

# last count of next_lirc to calculate lirc_set
name= last_lirc_count
type= VALUE
while= next_lirc
action= int

# last count of receive_signal
name= last_lirc
type= VALUE
value= last_lirc
value= receive_signal
while= receive_signal=0 ? 0 : 1
action= int

# last count of next_lirc
name= last_next_lirc
type= VALUE
while= next_lirc!=0 ? next_lirc : last_next_lirc
action= int

# highest lirc signal was last sending
name= lirc_high
type= VALUE
while= receive_signal ? receive_signal : lirc_high
action= int
# ---------------------------  end of read signal from receiver  ----------------------------------
# #################################################################################################



# whether button was last pressed (value 0)
# or lirc has received as last a signal (value 1)
name= what
type= VALUE
value= 0
value= 1
value= what
while= button ? 0 : receive_signal ? 1 : 2
action= int
perm= read



# -------------------------------------------------------------------------------------------------
# --------------  begin of calculation from first_touch, receive any and first_off  ---------------
# first signal from receiver or client button
# (this value is not the same like 'first touch show' on jclient)
name= first_touch
type= SWITCH
while= receive=0 & (button | (lirc_set & receive_signal<=calculate_lirc))

# first passing by no signal receiver or client button
name= first_off
type= SWITCH
while= receive_signal=0 & button=0 & receive=1
perm= lconfread

# receive signal from receiver or button was pressed
name= receive
type= SWITCH
while= receive_signal | button
perm= read

# last active button in an linked block
name= last_active
type= VALUE
while= first_touch ? correct_group : last_active
link= Hauppauge_TV:last_active
link= Hauppauge_KEY_CHANNELUP:last_active
link= Hauppauge_RADIO:last_active
link= Hauppauge_KEY_VOLUMEDOWN:last_active
link= Hauppauge_FULL_SCREEN:last_active
link= Hauppauge_KEY_VOLUMEUP:last_active
link= Hauppauge_KEY_MUTE:last_active
link= Hauppauge_KEY_CHANNELDOWN:last_active
link= Hauppauge_SOURCE:last_active
link= Hauppauge_KEY_1:last_active
link= Hauppauge_KEY_2:last_active
link= Hauppauge_KEY_3:last_active
link= Hauppauge_KEY_4:last_active
link= Hauppauge_KEY_5:last_active
link= Hauppauge_KEY_6:last_active
link= Hauppauge_KEY_7:last_active
link= Hauppauge_KEY_8:last_active
link= Hauppauge_KEY_9:last_active
link= Hauppauge_RESERVED:last_active
link= Hauppauge_KEY_0:last_active
link= Hauppauge_MINIMIZE:last_active
lwhile= group
# --------------  end of calculation from first_touch, receive any and first_off  -----------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ---------------------  begin properties can be changed from client  -----------------------------
# group of button which hold steps
name= group
type= VALUE
min= 1
max= 21
default= 21
action= int | db
perm= lconfchange

# count of exist steps
name= steps
type= VALUE
min= 0
max= 200
link= Hauppauge_TV:steps
link= Hauppauge_KEY_CHANNELUP:steps
link= Hauppauge_RADIO:steps
link= Hauppauge_KEY_VOLUMEDOWN:steps
link= Hauppauge_FULL_SCREEN:steps
link= Hauppauge_KEY_VOLUMEUP:steps
link= Hauppauge_KEY_MUTE:steps
link= Hauppauge_KEY_CHANNELDOWN:steps
link= Hauppauge_SOURCE:steps
link= Hauppauge_KEY_1:steps
link= Hauppauge_KEY_2:steps
link= Hauppauge_KEY_3:steps
link= Hauppauge_KEY_4:steps
link= Hauppauge_KEY_5:steps
link= Hauppauge_KEY_6:steps
link= Hauppauge_KEY_7:steps
link= Hauppauge_KEY_8:steps
link= Hauppauge_KEY_9:steps
link= Hauppauge_RESERVED:steps
link= Hauppauge_KEY_0:steps
link= Hauppauge_MINIMIZE:steps
lwhile= group
default= 1
action= int | db
perm= lconfchange

# action for transmitter:
#     'SEND ONCE'  = 0  # sending only one signal
#     'SEND units' = 1  # send signal units for each step
#     'SEND'       = 2  # send signals throughout the subroutine count is active
#     'WAIT after' = 3  # calibrate time how long an signal should during
#     'BACK time'  = 4  # calibrate BACK time before make again first touch
name= transmit_action
type= VALUE
min= 0
max= 4
link= Hauppauge_TV:transmit_action
link= Hauppauge_KEY_CHANNELUP:transmit_action
link= Hauppauge_RADIO:transmit_action
link= Hauppauge_KEY_VOLUMEDOWN:transmit_action
link= Hauppauge_FULL_SCREEN:transmit_action
link= Hauppauge_KEY_VOLUMEUP:transmit_action
link= Hauppauge_KEY_MUTE:transmit_action
link= Hauppauge_KEY_CHANNELDOWN:transmit_action
link= Hauppauge_SOURCE:transmit_action
link= Hauppauge_KEY_1:transmit_action
link= Hauppauge_KEY_2:transmit_action
link= Hauppauge_KEY_3:transmit_action
link= Hauppauge_KEY_4:transmit_action
link= Hauppauge_KEY_5:transmit_action
link= Hauppauge_KEY_6:transmit_action
link= Hauppauge_KEY_7:transmit_action
link= Hauppauge_KEY_8:transmit_action
link= Hauppauge_KEY_9:transmit_action
link= Hauppauge_RESERVED:transmit_action
link= Hauppauge_KEY_0:transmit_action
link= Hauppauge_MINIMIZE:transmit_action
lwhile= group
default= 0
action= int | db
perm= lconfchange

# action to count steps in which direction
#     'UP STOP'   = 0
#     'DOWN STOP' = 1
#     'UP LOOP'   = 2
#     'DOWN LOOP' = 3
name= steps_action
type= VALUE
min= 0
max= 3
default= 2
action= int | db
perm= lconfchange

# how much steps should counting for test
name= count_run_steps
type= VALUE
link= Hauppauge_TV:count_run_steps
link= Hauppauge_KEY_CHANNELUP:count_run_steps
link= Hauppauge_RADIO:count_run_steps
link= Hauppauge_KEY_VOLUMEDOWN:count_run_steps
link= Hauppauge_FULL_SCREEN:count_run_steps
link= Hauppauge_KEY_VOLUMEUP:count_run_steps
link= Hauppauge_KEY_MUTE:count_run_steps
link= Hauppauge_KEY_CHANNELDOWN:count_run_steps
link= Hauppauge_SOURCE:count_run_steps
link= Hauppauge_KEY_1:count_run_steps
link= Hauppauge_KEY_2:count_run_steps
link= Hauppauge_KEY_3:count_run_steps
link= Hauppauge_KEY_4:count_run_steps
link= Hauppauge_KEY_5:count_run_steps
link= Hauppauge_KEY_6:count_run_steps
link= Hauppauge_KEY_7:count_run_steps
link= Hauppauge_KEY_8:count_run_steps
link= Hauppauge_KEY_9:count_run_steps
link= Hauppauge_RESERVED:count_run_steps
link= Hauppauge_KEY_0:count_run_steps
link= Hauppauge_MINIMIZE:count_run_steps
lwhile= group
min= 0
default= 1
action= int
perm= lconfchange

# counting at pressed this buttons steps in count_run_steps
name= do_run_steps
type= SWITCH
perm= lconfchange

# how often the interval of subroutine after is to wait for next step
# ('first touch show' on jclient)
name= display_first
type= VALUE
link= Hauppauge_TV:display_first
link= Hauppauge_KEY_CHANNELUP:display_first
link= Hauppauge_RADIO:display_first
link= Hauppauge_KEY_VOLUMEDOWN:display_first
link= Hauppauge_FULL_SCREEN:display_first
link= Hauppauge_KEY_VOLUMEUP:display_first
link= Hauppauge_KEY_MUTE:display_first
link= Hauppauge_KEY_CHANNELDOWN:display_first
link= Hauppauge_SOURCE:display_first
link= Hauppauge_KEY_1:display_first
link= Hauppauge_KEY_2:display_first
link= Hauppauge_KEY_3:display_first
link= Hauppauge_KEY_4:display_first
link= Hauppauge_KEY_5:display_first
link= Hauppauge_KEY_6:display_first
link= Hauppauge_KEY_7:display_first
link= Hauppauge_KEY_8:display_first
link= Hauppauge_KEY_9:display_first
link= Hauppauge_RESERVED:display_first
link= Hauppauge_KEY_0:display_first
link= Hauppauge_MINIMIZE:display_first
lwhile= group
min= 0
max= 1
action= int | db
perm= lconfchange

# button to calculating 'wait after' time after pressed few steps
name= calcbutton
type= SWITCH
perm= lconfchange

# calculate time how long an signal should during
name= calculate
type= SET
from= pressed / (actual_step + display_first)
set= after
while= what=0 & calcbutton

# calculate how much signals from receiver inherit one step
name= calculate_lirc
type= VALUE
value= lirc_high / (actual_step + display_first)
value= calculate_lirc
while= what=1 & calcbutton ? 0 : 1
link= Hauppauge_TV:calculate_lirc
link= Hauppauge_KEY_CHANNELUP:calculate_lirc
link= Hauppauge_RADIO:calculate_lirc
link= Hauppauge_KEY_VOLUMEDOWN:calculate_lirc
link= Hauppauge_FULL_SCREEN:calculate_lirc
link= Hauppauge_KEY_VOLUMEUP:calculate_lirc
link= Hauppauge_KEY_MUTE:calculate_lirc
link= Hauppauge_KEY_CHANNELDOWN:calculate_lirc
link= Hauppauge_SOURCE:calculate_lirc
link= Hauppauge_KEY_1:calculate_lirc
link= Hauppauge_KEY_2:calculate_lirc
link= Hauppauge_KEY_3:calculate_lirc
link= Hauppauge_KEY_4:calculate_lirc
link= Hauppauge_KEY_5:calculate_lirc
link= Hauppauge_KEY_6:calculate_lirc
link= Hauppauge_KEY_7:calculate_lirc
link= Hauppauge_KEY_8:calculate_lirc
link= Hauppauge_KEY_9:calculate_lirc
link= Hauppauge_RESERVED:calculate_lirc
link= Hauppauge_KEY_0:calculate_lirc
link= Hauppauge_MINIMIZE:calculate_lirc
lwhile= group
default= 5
min= 1
max= 20
action= int | db
perm= lconfchange

# measure time to wait after signal for next step
name= after
type= TIMER
while= transmit_action=3 & button
link= Hauppauge_TV:after
link= Hauppauge_KEY_CHANNELUP:after
link= Hauppauge_RADIO:after
link= Hauppauge_KEY_VOLUMEDOWN:after
link= Hauppauge_FULL_SCREEN:after
link= Hauppauge_KEY_VOLUMEUP:after
link= Hauppauge_KEY_MUTE:after
link= Hauppauge_KEY_CHANNELDOWN:after
link= Hauppauge_SOURCE:after
link= Hauppauge_KEY_1:after
link= Hauppauge_KEY_2:after
link= Hauppauge_KEY_3:after
link= Hauppauge_KEY_4:after
link= Hauppauge_KEY_5:after
link= Hauppauge_KEY_6:after
link= Hauppauge_KEY_7:after
link= Hauppauge_KEY_8:after
link= Hauppauge_KEY_9:after
link= Hauppauge_RESERVED:after
link= Hauppauge_KEY_0:after
link= Hauppauge_MINIMIZE:after
lwhile= group
default= 0.3
action= db | measure | micro
perm= lconfchange

# how long the time after last pressed should measured for next step
name= back_time
type= TIMER
while= transmit_action=4 & button
link= Hauppauge_TV:back_time
link= Hauppauge_KEY_CHANNELUP:back_time
link= Hauppauge_RADIO:back_time
link= Hauppauge_KEY_VOLUMEDOWN:back_time
link= Hauppauge_FULL_SCREEN:back_time
link= Hauppauge_KEY_VOLUMEUP:back_time
link= Hauppauge_KEY_MUTE:back_time
link= Hauppauge_KEY_CHANNELDOWN:back_time
link= Hauppauge_SOURCE:back_time
link= Hauppauge_KEY_1:back_time
link= Hauppauge_KEY_2:back_time
link= Hauppauge_KEY_3:back_time
link= Hauppauge_KEY_4:back_time
link= Hauppauge_KEY_5:back_time
link= Hauppauge_KEY_6:back_time
link= Hauppauge_KEY_7:back_time
link= Hauppauge_KEY_8:back_time
link= Hauppauge_KEY_9:back_time
link= Hauppauge_RESERVED:back_time
link= Hauppauge_KEY_0:back_time
link= Hauppauge_MINIMIZE:back_time
lwhile= group
default= 2.5
action= db | measure | micro
perm= lconfchange

# whether should set actual step only to an number
name= set_steps
type= SWITCH
default= 0
action= db
perm= lconfchange

# how many presses of numbers should finish setting
name= digits
type= VALUE
link= Hauppauge_TV:digits
link= Hauppauge_KEY_CHANNELUP:digits
link= Hauppauge_RADIO:digits
link= Hauppauge_KEY_VOLUMEDOWN:digits
link= Hauppauge_FULL_SCREEN:digits
link= Hauppauge_KEY_VOLUMEUP:digits
link= Hauppauge_KEY_MUTE:digits
link= Hauppauge_KEY_CHANNELDOWN:digits
link= Hauppauge_SOURCE:digits
link= Hauppauge_KEY_1:digits
link= Hauppauge_KEY_2:digits
link= Hauppauge_KEY_3:digits
link= Hauppauge_KEY_4:digits
link= Hauppauge_KEY_5:digits
link= Hauppauge_KEY_6:digits
link= Hauppauge_KEY_7:digits
link= Hauppauge_KEY_8:digits
link= Hauppauge_KEY_9:digits
link= Hauppauge_RESERVED:digits
link= Hauppauge_KEY_0:digits
link= Hauppauge_MINIMIZE:digits
lwhile= group
min= 0
max= 5
default= 1
action= int | db
perm= lconfchange

# to which value actual step should be set when subroutine set_steps is activated
name= to_value
type= VALUE
default= 0
action= int | db
perm= lconfchange

# change actual step to when by this group of button the defined value is reached
name= change1
type= VALUE
link= Hauppauge_TV:change1
link= Hauppauge_KEY_CHANNELUP:change1
link= Hauppauge_RADIO:change1
link= Hauppauge_KEY_VOLUMEDOWN:change1
link= Hauppauge_FULL_SCREEN:change1
link= Hauppauge_KEY_VOLUMEUP:change1
link= Hauppauge_KEY_MUTE:change1
link= Hauppauge_KEY_CHANNELDOWN:change1
link= Hauppauge_SOURCE:change1
link= Hauppauge_KEY_1:change1
link= Hauppauge_KEY_2:change1
link= Hauppauge_KEY_3:change1
link= Hauppauge_KEY_4:change1
link= Hauppauge_KEY_5:change1
link= Hauppauge_KEY_6:change1
link= Hauppauge_KEY_7:change1
link= Hauppauge_KEY_8:change1
link= Hauppauge_KEY_9:change1
link= Hauppauge_RESERVED:change1
link= Hauppauge_KEY_0:change1
link= Hauppauge_MINIMIZE:change1
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue1
type= VALUE
link= Hauppauge_TV:isvalue1
link= Hauppauge_KEY_CHANNELUP:isvalue1
link= Hauppauge_RADIO:isvalue1
link= Hauppauge_KEY_VOLUMEDOWN:isvalue1
link= Hauppauge_FULL_SCREEN:isvalue1
link= Hauppauge_KEY_VOLUMEUP:isvalue1
link= Hauppauge_KEY_MUTE:isvalue1
link= Hauppauge_KEY_CHANNELDOWN:isvalue1
link= Hauppauge_SOURCE:isvalue1
link= Hauppauge_KEY_1:isvalue1
link= Hauppauge_KEY_2:isvalue1
link= Hauppauge_KEY_3:isvalue1
link= Hauppauge_KEY_4:isvalue1
link= Hauppauge_KEY_5:isvalue1
link= Hauppauge_KEY_6:isvalue1
link= Hauppauge_KEY_7:isvalue1
link= Hauppauge_KEY_8:isvalue1
link= Hauppauge_KEY_9:isvalue1
link= Hauppauge_RESERVED:isvalue1
link= Hauppauge_KEY_0:isvalue1
link= Hauppauge_MINIMIZE:isvalue1
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change1 reach value isvalue1
name= tovalue1
type= VALUE
link= Hauppauge_TV:tovalue1
link= Hauppauge_KEY_CHANNELUP:tovalue1
link= Hauppauge_RADIO:tovalue1
link= Hauppauge_KEY_VOLUMEDOWN:tovalue1
link= Hauppauge_FULL_SCREEN:tovalue1
link= Hauppauge_KEY_VOLUMEUP:tovalue1
link= Hauppauge_KEY_MUTE:tovalue1
link= Hauppauge_KEY_CHANNELDOWN:tovalue1
link= Hauppauge_SOURCE:tovalue1
link= Hauppauge_KEY_1:tovalue1
link= Hauppauge_KEY_2:tovalue1
link= Hauppauge_KEY_3:tovalue1
link= Hauppauge_KEY_4:tovalue1
link= Hauppauge_KEY_5:tovalue1
link= Hauppauge_KEY_6:tovalue1
link= Hauppauge_KEY_7:tovalue1
link= Hauppauge_KEY_8:tovalue1
link= Hauppauge_KEY_9:tovalue1
link= Hauppauge_RESERVED:tovalue1
link= Hauppauge_KEY_0:tovalue1
link= Hauppauge_MINIMIZE:tovalue1
lwhile= group
min= 0
action= int | db

# change actual step to when by this group of button the defined value is reached
name= change2
type= VALUE
link= Hauppauge_TV:change2
link= Hauppauge_KEY_CHANNELUP:change2
link= Hauppauge_RADIO:change2
link= Hauppauge_KEY_VOLUMEDOWN:change2
link= Hauppauge_FULL_SCREEN:change2
link= Hauppauge_KEY_VOLUMEUP:change2
link= Hauppauge_KEY_MUTE:change2
link= Hauppauge_KEY_CHANNELDOWN:change2
link= Hauppauge_SOURCE:change2
link= Hauppauge_KEY_1:change2
link= Hauppauge_KEY_2:change2
link= Hauppauge_KEY_3:change2
link= Hauppauge_KEY_4:change2
link= Hauppauge_KEY_5:change2
link= Hauppauge_KEY_6:change2
link= Hauppauge_KEY_7:change2
link= Hauppauge_KEY_8:change2
link= Hauppauge_KEY_9:change2
link= Hauppauge_RESERVED:change2
link= Hauppauge_KEY_0:change2
link= Hauppauge_MINIMIZE:change2
lwhile= group
min= 0
action= int | db

# when this value be reached in button change1, set new actual value
name= isvalue2
type= VALUE
link= Hauppauge_TV:isvalue2
link= Hauppauge_KEY_CHANNELUP:isvalue2
link= Hauppauge_RADIO:isvalue2
link= Hauppauge_KEY_VOLUMEDOWN:isvalue2
link= Hauppauge_FULL_SCREEN:isvalue2
link= Hauppauge_KEY_VOLUMEUP:isvalue2
link= Hauppauge_KEY_MUTE:isvalue2
link= Hauppauge_KEY_CHANNELDOWN:isvalue2
link= Hauppauge_SOURCE:isvalue2
link= Hauppauge_KEY_1:isvalue2
link= Hauppauge_KEY_2:isvalue2
link= Hauppauge_KEY_3:isvalue2
link= Hauppauge_KEY_4:isvalue2
link= Hauppauge_KEY_5:isvalue2
link= Hauppauge_KEY_6:isvalue2
link= Hauppauge_KEY_7:isvalue2
link= Hauppauge_KEY_8:isvalue2
link= Hauppauge_KEY_9:isvalue2
link= Hauppauge_RESERVED:isvalue2
link= Hauppauge_KEY_0:isvalue2
link= Hauppauge_MINIMIZE:isvalue2
lwhile= group
min= 0
action= int | db

# change actual_step to this value when button change2 reach value isvalue2
name= tovalue2
type= VALUE
link= Hauppauge_TV:tovalue2
link= Hauppauge_KEY_CHANNELUP:tovalue2
link= Hauppauge_RADIO:tovalue2
link= Hauppauge_KEY_VOLUMEDOWN:tovalue2
link= Hauppauge_FULL_SCREEN:tovalue2
link= Hauppauge_KEY_VOLUMEUP:tovalue2
link= Hauppauge_KEY_MUTE:tovalue2
link= Hauppauge_KEY_CHANNELDOWN:tovalue2
link= Hauppauge_SOURCE:tovalue2
link= Hauppauge_KEY_1:tovalue2
link= Hauppauge_KEY_2:tovalue2
link= Hauppauge_KEY_3:tovalue2
link= Hauppauge_KEY_4:tovalue2
link= Hauppauge_KEY_5:tovalue2
link= Hauppauge_KEY_6:tovalue2
link= Hauppauge_KEY_7:tovalue2
link= Hauppauge_KEY_8:tovalue2
link= Hauppauge_KEY_9:tovalue2
link= Hauppauge_RESERVED:tovalue2
link= Hauppauge_KEY_0:tovalue2
link= Hauppauge_MINIMIZE:tovalue2
lwhile= group
min= 0
action= int | db
# ---------------------  end properties can be changed from client  -------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------  begin of time calculation for button (send) and new activating first touch  ------------
# mesure the time after pressing button or receive signal for set next step
name= wait_after
type= TIMER
mtime= (count_steps_do=0 | transmit_action=0) & transmit_action!=1 ? after : after * Hauppauge__choice:multi_wait
begin= transmit_action<=2 & button & first_touch
while= transmit_action<=2 & button
action= micro

# measure time after lost signal over receiver or button
# in this time can be pressed again, next step inside this time will be not only for show
name= new_activate
type= TIMER
mtime= back_time
begin= set_steps ? digits>1 & new_activate<=0 & first_touch : display_first & first_off
end= new_activate<=0
link= Hauppauge_TV:new_activate
link= Hauppauge_KEY_CHANNELUP:new_activate
link= Hauppauge_RADIO:new_activate
link= Hauppauge_KEY_VOLUMEDOWN:new_activate
link= Hauppauge_FULL_SCREEN:new_activate
link= Hauppauge_KEY_VOLUMEUP:new_activate
link= Hauppauge_KEY_MUTE:new_activate
link= Hauppauge_KEY_CHANNELDOWN:new_activate
link= Hauppauge_SOURCE:new_activate
link= Hauppauge_KEY_1:new_activate
link= Hauppauge_KEY_2:new_activate
link= Hauppauge_KEY_3:new_activate
link= Hauppauge_KEY_4:new_activate
link= Hauppauge_KEY_5:new_activate
link= Hauppauge_KEY_6:new_activate
link= Hauppauge_KEY_7:new_activate
link= Hauppauge_KEY_8:new_activate
link= Hauppauge_KEY_9:new_activate
link= Hauppauge_RESERVED:new_activate
link= Hauppauge_KEY_0:new_activate
link= Hauppauge_MINIMIZE:new_activate
lwhile= group
action= micro

# whether folder wait for time to show back the default value
name= wait_back_time
type= SWITCH
while= new_activate>0
perm= read
# -------  end of time calculation for button (send) and new activating first touch  --------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# ----------------------  begin of sending signal over transmitter  -------------------------------
# set steps in count_steps from count_run_steps when switch from do_run_steps was activated
name= set_run_steps
type= SET
from= count_run_steps
from= 0
set= count_steps
set= do_run_steps
while= do_run_steps

# send only one signal over transmitter
name= send_once
type= LIRC
ID= Hauppauge
pin= MINIMIZE
count= Hauppauge__choice:lirc_step
value= 1
while= button & (first_touch & (transmit_action<=1 | count_steps_do | transmit_action=4)) | (transmit_action=1 | count_steps_do) & wait_after=0
action= send_once

# send signal over transmitter for longer time
name= send_onoff
type= LIRC
ID= Hauppauge
pin= MINIMIZE
value= button
while= count_steps_do=0 & (transmit_action=2 | transmit_action=3) & (button & send_onoff=0) | (button=0 & send_onoff)
action= send
# ----------------------  end of sending signal over transmitter  ---------------------------------
# #################################################################################################



# -------------------------------------------------------------------------------------------------
# -------------------------  begin of calculation for next step  ----------------------------------
# length of first_touch multiplicator
name= first_calc
type= VALUE
value= Hauppauge:double
value= 0
value= first_calc -1
value= first_calc
while= "last_active!=correct_group ? 3 :
                receive=0 &
                new_activate<=0 ? 0 :
                    first_touch &
                    first_calc>=2 ? 1 :
                        receive &
                        first_calc>0 &
                        (    (    what=0 &
                                  (    wait_after=0 |
                                       (    new_activate > 0 &
                                            wait_after=after        )    )    ) |
                             (    what=1 &
                                  lirc_set &
                                  (    first_touch=0 |
                                       receive_signal > calculate_lirc |
                                       new_activate > 0                    )    )    ) ? 2 : 3"
link= Hauppauge_TV:first_calc
link= Hauppauge_KEY_CHANNELUP:first_calc
link= Hauppauge_RADIO:first_calc
link= Hauppauge_KEY_VOLUMEDOWN:first_calc
link= Hauppauge_FULL_SCREEN:first_calc
link= Hauppauge_KEY_VOLUMEUP:first_calc
link= Hauppauge_KEY_MUTE:first_calc
link= Hauppauge_KEY_CHANNELDOWN:first_calc
link= Hauppauge_SOURCE:first_calc
link= Hauppauge_KEY_1:first_calc
link= Hauppauge_KEY_2:first_calc
link= Hauppauge_KEY_3:first_calc
link= Hauppauge_KEY_4:first_calc
link= Hauppauge_KEY_5:first_calc
link= Hauppauge_KEY_6:first_calc
link= Hauppauge_KEY_7:first_calc
link= Hauppauge_KEY_8:first_calc
link= Hauppauge_KEY_9:first_calc
link= Hauppauge_RESERVED:first_calc
link= Hauppauge_KEY_0:first_calc
link= Hauppauge_MINIMIZE:first_calc
lwhile= group
action= int
default= 1

# define value of actual step before when folder button be defined to 'set only actual step'
name= predef_step
type= VALUE
link= Hauppauge_TV:predef_step
link= Hauppauge_KEY_CHANNELUP:predef_step
link= Hauppauge_RADIO:predef_step
link= Hauppauge_KEY_VOLUMEDOWN:predef_step
link= Hauppauge_FULL_SCREEN:predef_step
link= Hauppauge_KEY_VOLUMEUP:predef_step
link= Hauppauge_KEY_MUTE:predef_step
link= Hauppauge_KEY_CHANNELDOWN:predef_step
link= Hauppauge_SOURCE:predef_step
link= Hauppauge_KEY_1:predef_step
link= Hauppauge_KEY_2:predef_step
link= Hauppauge_KEY_3:predef_step
link= Hauppauge_KEY_4:predef_step
link= Hauppauge_KEY_5:predef_step
link= Hauppauge_KEY_6:predef_step
link= Hauppauge_KEY_7:predef_step
link= Hauppauge_KEY_8:predef_step
link= Hauppauge_KEY_9:predef_step
link= Hauppauge_RESERVED:predef_step
link= Hauppauge_KEY_0:predef_step
link= Hauppauge_MINIMIZE:predef_step
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? ( predef_step=-1 ? to_value : predef_step*10+to_value) : predef_step
action= int
default= -1
perm= read

# calculate how much digits are set for current session
name= digs_set
type= VALUE
link= Hauppauge_TV:digs_set
link= Hauppauge_KEY_CHANNELUP:digs_set
link= Hauppauge_RADIO:digs_set
link= Hauppauge_KEY_VOLUMEDOWN:digs_set
link= Hauppauge_FULL_SCREEN:digs_set
link= Hauppauge_KEY_VOLUMEUP:digs_set
link= Hauppauge_KEY_MUTE:digs_set
link= Hauppauge_KEY_CHANNELDOWN:digs_set
link= Hauppauge_SOURCE:digs_set
link= Hauppauge_KEY_1:digs_set
link= Hauppauge_KEY_2:digs_set
link= Hauppauge_KEY_3:digs_set
link= Hauppauge_KEY_4:digs_set
link= Hauppauge_KEY_5:digs_set
link= Hauppauge_KEY_6:digs_set
link= Hauppauge_KEY_7:digs_set
link= Hauppauge_KEY_8:digs_set
link= Hauppauge_KEY_9:digs_set
link= Hauppauge_RESERVED:digs_set
link= Hauppauge_KEY_0:digs_set
link= Hauppauge_MINIMIZE:digs_set
lwhile= group
while= last_active=correct_group & set_steps & first_touch ? digs_set + 1 : digs_set
min= 0

# actual step from other button
name= othervalue1
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change1
action= int

# change actual_step to tovalue1 when button change1 reach value isvalue1
name= setback1
type= SET
from= tovalue1
set= actual_step
while= change1 & group=correct_group & isvalue1=othervalue1

# actual step from other button
name= othervalue2
type= VALUE
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= change2
action= int

# change actual_step to tovalue2 when button change2 reach value isvalue2
name= setback2
type= SET
from= tovalue2
set= actual_step
while= change2 & group=correct_group & isvalue2=othervalue2

# actual step before changing to know whether actual step was changed
name= actual_step_before
type= VALUE
while= actual_step

# count of actual step
name= actual_step
type= VALUE
min= 0
max= 500
default= 0
value= predef_step
value= actual_step
value= actual_step >= steps ? steps : actual_step + 1
value= actual_step <= 0 ? 0 : actual_step - 1
value= actual_step >= steps ? 0 : actual_step + 1
value= actual_step <= 0 ? steps : actual_step - 1
while= "set_steps ? ( predef_step!=-1 ? 0 : 1 ) :
                     (    display_first=0 &
                          first_touch                ) |
                     (    what=0 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               receive &
                               first_calc=0 &
                               (    first_touch |
                                    wait_after=0 |
                                    wait_after=after    )    )    ) |
                     (    what=1 &
                          (    ( transmit_action=1 |
                                 transmit_action=2  ) &
                               first_calc=0 &
                               lirc_set                 )    )         ? steps_action + 2 : 1"
link= Hauppauge_TV:actual_step
link= Hauppauge_KEY_CHANNELUP:actual_step
link= Hauppauge_RADIO:actual_step
link= Hauppauge_KEY_VOLUMEDOWN:actual_step
link= Hauppauge_FULL_SCREEN:actual_step
link= Hauppauge_KEY_VOLUMEUP:actual_step
link= Hauppauge_KEY_MUTE:actual_step
link= Hauppauge_KEY_CHANNELDOWN:actual_step
link= Hauppauge_SOURCE:actual_step
link= Hauppauge_KEY_1:actual_step
link= Hauppauge_KEY_2:actual_step
link= Hauppauge_KEY_3:actual_step
link= Hauppauge_KEY_4:actual_step
link= Hauppauge_KEY_5:actual_step
link= Hauppauge_KEY_6:actual_step
link= Hauppauge_KEY_7:actual_step
link= Hauppauge_KEY_8:actual_step
link= Hauppauge_KEY_9:actual_step
link= Hauppauge_RESERVED:actual_step
link= Hauppauge_KEY_0:actual_step
link= Hauppauge_MINIMIZE:actual_step
lwhile= group
action= int | db
perm= ureadlw

# wait double by again pressing
name= again
type= SET
from= 2
set= first_calc
while= first_touch & Hauppauge:double & count_steps_do=0 & transmit_action=2 | what=1 & transmit_action=1

# Decrease count steps when one step was counted
name= count_step_done
type= SET
from= count_steps_do -1
set= count_steps_do
while= count_steps_do & (first_calc=0 & wait_after<=0) | (display_first=0 & first_touch)

# set back predefined steps (predef_step) to -1 when defined in actual_step
name= predef_back
type= SET
from= -1
from= 0
from= 0
set= predef_step
set= digs_set
set= new_activate
while= digs_set!=0 & last_active=correct_group & (digs_set=digits | new_activate<=0)
# -------------------------  end of calculation for next step  ------------------------------------
# #################################################################################################





